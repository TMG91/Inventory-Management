#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 2906df61-3b75-465a-95a9-2c4821fc5931
# Source File: C:\Users\mz47274\OneDrive - Floor and Decor\Documents\SAPIEN\PowerShell Studio\Files\Test.psf
#------------------------------------------------------------------------
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
/QIAAB+LCAAAAAAABABlkkmPolAAhO8k/AfTV5N+giCa2CYgIpusgsAN5InIzmP11093z2WSqVOl
KnWpfHsL3qsBtjMfduHi26C0Kr8+1p/kxwHHFou93qZJWoa5kOZQCwt4uELUfdbosQf/Vb8DoWqL
g2ysBQLc1Na8s+xR54/sX3Esr7k3Qt28WR94DAcmfu5vU0uQlHLbip2XiU7DsLRBbVaP2KY0+bQi
Ht5yOQwrHAuuLUKG44Z2Juv2w7DvzHMDk20vGaZsMFBdyWfat32GY86x7Odcr+pCAC2YjRtr1Yp0
fE972kcoOcY4dj96YtRAz5jCoEZKdka+7TR6gC5P4ZwksMxY0p17kyJZKhCYioczPyT9DpiaIkv9
tH15fUBc7HUpWTgW3q9WE8hnhRZNM/WVIeYbsb3KCpKfYWeigJWX2+mZqYny1NJ6hI3Rc91wMtyL
5RhbyX67c10pvMYbSxzjx7KvzksLdFz786X6/SV6uynNsGRv+TGxEYDYcuTz2rmq0pKeHr2cKPbX
zjECwZxN6YumfepsBbmHY0ZIPMYmU4q7OIeK22YPgmPstsl5vYjeiW1InRONnR06Y47M23KnEeTd
6JYFWJcqn95O4VwzjMUJu3CNY+5aD0ZJKhXr8s7GwkciS7iOXG/Qjji2A0WCkpMk2NZkq/pDlZq7
1Wzpq1du7ZKqCx5lWvCxqRDxi7JxTGkAFN8U4XK9xrgXwhRcvdgkoCZrUQdlXZdkddq9+o5+kc88
GvlOI4Gckte4DyMplMG0ncaOAT+k4RjLfn3twS+CvzCyCMEiylOIFuA72YN/cT/8AR0et5f9AgAA#>
#endregion

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2022 v5.8.209
     Generated on:       8/31/2022 4:51 PM
     Generated by:       mz47274
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2022
#>


#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Show-Test_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$form1 = New-Object 'System.Windows.Forms.Form'
	$button1 = New-Object 'System.Windows.Forms.Button'
    $button2 = New-Object 'System.Windows.Forms.Button'
    $button3 = New-Object 'System.Windows.Forms.Button'
    $Label3 = New-Object 'System.Windows.Forms.Label'
	$Combobox1 = New-Object 'System.Windows.Forms.ComboBox'
    $Label2 = New-Object 'System.Windows.Forms.Label'
	$Combobox2 = New-Object 'System.Windows.Forms.ComboBox'
    $Label = New-Object 'System.Windows.Forms.Label'
    $textbox1 = New-Object 'System.Windows.Forms.TextBox'
    $textbox2 = New-Object 'System.Windows.Forms.TextBox'
    $Label4 = New-Object 'System.Windows.Forms.Label'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$form1_Load={
		#TODO: Initialize Form Controls here
		
	}
	
	$button1_Click={
		#TODO: Place custom script here
		[pscustomobject]@{ SerialNumber = $textbox1.Text; Location = $Combobox1.Text; ItemName = $Combobox2.Text; QTY = $textbox2.Text; ClientName = $env:COMPUTERNAME } | Export-Csv -Append -Path "C:\IT_Inv_Man\PLT.csv" -NoTypeInformation
	
    #Add-Type -AssemblyName PresentationFramework
    #[System.Windows.MessageBox]::Show('Item has been added to inventory', 'Confirmation', 'OK');

    }
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$form1.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$button1.remove_Click($button1_Click)
            $button2.remove_Click($button2_Click)
            $button3.remove_Click($button3_Click)
			$form1.remove_Load($form1_Load)
			$form1.remove_Load($Form_StateCorrection_Load)
			$form1.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$form1.SuspendLayout()
	#
	# form1
	#
	$form1.Controls.Add($button1)
    $form1.Controls.Add($button2)
    $form1.Controls.Add($button3)
    $form1.Controls.Add($Label3)
    $form1.Controls.Add($Combobox2)
    $form1.Controls.Add($Label2)
	$form1.Controls.Add($Combobox1)
    $form1.Controls.Add($Label)
	$form1.Controls.Add($textbox1)
    $form1.Controls.Add($textbox2)
    $form1.Controls.Add($Label4)
	$form1.AutoScaleDimensions = New-Object System.Drawing.SizeF(10, 20)
	$form1.AutoScaleMode = 'Font'
	$form1.ClientSize = New-Object System.Drawing.Size(1000, 800)
	$form1.Name = 'form1'
	$form1.Text = 'IT Inventory Management'
	$form1.add_Load($form1_Load)
	#
	# button1
	#
	$button1.Location = New-Object System.Drawing.Point(14, 300)
	$button1.Margin = '5, 5, 5, 5'
	$button1.Name = 'button1'
	$button1.Size = New-Object System.Drawing.Size(150, 35)
	$button1.TabIndex = 2
	$button1.Text = 'Add'
	$button1.UseVisualStyleBackColor = $True
	$button1.add_Click($button1_Click)
    #
	# button2
	#
	$button2.Location = New-Object System.Drawing.Point(200, 300)
	$button2.Margin = '5, 5, 5, 5'
	$button2.Name = 'button2'
	$button2.Size = New-Object System.Drawing.Size(150, 35)
	$button2.TabIndex = 2
	$button2.Text = 'Remove'
	$button2.UseVisualStyleBackColor = $True
	$button2.add_Click($button2_Click)
	#
    # button3
    #
    $button3.Location = New-Object System.Drawing.Point(386, 300)
	$button3.Margin = '5, 5, 5, 5'
	$button3.Name = 'button2'
	$button3.Size = New-Object System.Drawing.Size(150, 35)
	$button3.TabIndex = 2
	$button3.Text = 'Check'
	$button3.UseVisualStyleBackColor = $True
	$button3.add_Click($button3_Click)
	#
	# Combobox2
	#
	$Combobox2.Location = New-Object System.Drawing.Point(14, 240)
	$Combobox2.Margin = '5, 5, 5, 5'
	$Combobox2.Name = 'ItemName'
	$Combobox2.Size = New-Object System.Drawing.Size(550, 70)
    $Combobox2.TabIndex = 2
    $ItemNames = Import-Csv C:\IT_Inv_Man\ItemName.csv

            Foreach ($ItemName in $ItemNames)

            {

            $ComboBox2.Items.Add($ItemName.ItemName);

            }
    $Label3.Text = "ItemName:"
    $Label3.Location  = New-Object System.Drawing.Point(14, 195)
    $Label3.AutoSize = $true
	#
	# Combobox1
	#
	$Combobox1.Location = New-Object System.Drawing.Point(14, 150)
	$Combobox1.Margin = '5, 5, 5, 5'
	$Combobox1.Name = 'Location'
	$Combobox1.Size = New-Object System.Drawing.Size(300, 70)
	$Combobox1.TabIndex = 1
    $Locations = Import-Csv C:\IT_Inv_Man\LocList.csv
    Foreach ($Location in $Locations)

            {

            $ComboBox1.Items.Add($Location.Location);

            }

    $Label2.Text = "Location:"
    $Label2.Location  = New-Object System.Drawing.Point(14, 105)
    $Label2.AutoSize = $true
	#
	# textbox1
	#
	$textbox1.Location = New-Object System.Drawing.Point(14, 59)
	$textbox1.Margin = '5, 5, 5, 5'
	$textbox1.Name = 'textbox1'
	$textbox1.Size = New-Object System.Drawing.Size(300, 26)
	$textbox1.TabIndex = 0
    $Label.Text = "SerialNumber:"
    $Label.Location  = New-Object System.Drawing.Point(14, 14)
    $Label.AutoSize = $true



    $textbox2.Location = New-Object System.Drawing.Point(500, 59)
	$textbox2.Margin = '5, 5, 5, 5'
	$textbox2.Name = 'textbox2'
	$textbox2.Size = New-Object System.Drawing.Size(80, 26)
	$textbox2.TabIndex = 0
    $Label4.Text = "QTY:"
    $Label4.Location  = New-Object System.Drawing.Point(400, 59)
    $Label4.AutoSize = $true
    #
    # objtextbox1
    #
    $objTextBox1 = New-Object System.Windows.Forms.TextBox 
    $objTextBox1.Multiline = $True;
    $objTextBox1.Location = New-Object System.Drawing.Size(14,400) 
    $objTextBox1.Size = New-Object System.Drawing.Size(800,300)
    $objTextBox1.Scrollbars = "Vertical" 
    $Form1.Controls.Add($objTextBox1)
    
	$form1.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $form1.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$form1.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$form1.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $form1.ShowDialog()

} #End Function

#Call the form
Show-Test_psf | Out-Null
